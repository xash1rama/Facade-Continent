import httpx
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, StateFilter
from aiogram import Router
from aiogram.types import FSInputFile
from .markups import (
    get_main_keyboard,
    get_feedback_keyboard,
    get_phone_keyboard,
    get_comment_keyboard,
)
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from fasad.database.models import (session, Contact, Information, Session)



API_TOKEN = session.query(Information).filter(Information.name == "–¢–æ–∫–µ–Ω –±–æ—Ç–∞").first().data
CHAT_ID = session.query(Information).filter(Information.name == "ID –¢–ì-–∞–¥–º–∏–Ω —á–∞—Ç–∞").first().data

bot = Bot(token=API_TOKEN)
router = Router()
storage = MemoryStorage()
dp = Dispatcher(storage=storage)
dp.include_router(router)


class Form(StatesGroup):
    name = State()
    phone = State()
    comments = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    try:
        text = """
    –ü—Ä–∏–≤–µ—Ç, —É–∑–Ω–∞–π —Å–µ–≥–æ–¥–Ω—è –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞:
        - –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ Facade Continent
        - –£–∑–Ω–∞–π –±–æ–ª—å—à–µ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö 
        - –£–∑–Ω–∞–π –∫–∞–∫ —Å –Ω–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è
        - –û—Å—Ç–∞–≤—å –∑–∞—è–≤–∫—É –∏ –º—ã —Å–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è
        
    –î–æ–º –º–µ—á—Ç—ã –ø—Ä–æ—â–µ —á–µ–º –∏ –±–ª–∏–∂–µ —á–µ–º –∫–∞–∂–µ—Ç—Å—è!üòä
        """
        await message.answer(text, reply_markup=get_main_keyboard())
    except Exception:
        await message.answer(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤–µ—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –Ω–µ–ø–æ–ª–∞–¥–∫–∞, –Ω—É–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_keyboard(),
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@router.message()
async def handle_buttons(message: types.Message):
    try:
        if message.text == "–û –Ω–∞—Å üåü":
            text = """
    üåü *–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è Facade Continent* üåü  
    *–ë–æ–ª–µ–µ 18 –ª–µ—Ç –Ω–∞ —Ä—ã–Ω–∫–µ!*
    
    Facade Continent ‚Äì —ç—Ç–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å 2005 –≥–æ–¥–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–≥–æ—Ä–æ–¥–Ω—ã—Ö –¥–æ–º–æ–≤ –∏ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ–º –º–µ—á—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å. –ó–∞ —ç—Ç–æ –≤—Ä–µ–º—è –º—ã –Ω–µ —Ç–æ–ª—å–∫–æ —Å—Ç–∞–ª–∏ –≤–∞–∂–Ω–æ–π —á–∞—Å—Ç—å—é —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∞—Å–ª–∏, –Ω–æ –∏ –∑–∞–≤–æ–µ–≤–∞–ª–∏ –¥–æ–≤–µ—Ä–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å –¥–ª—è –ø–æ—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–æ–µ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∂–∏–ª–∏—â–∞. üè°
    
    –ú—ã –ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ —Ñ–∞—Å–∞–¥ –∏ –∫—Ä–æ–≤–ª—è ‚Äì —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∑–∞—â–∏—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–∞—à–µ–≥–æ –¥–æ–º–∞, –Ω–æ –∏ –∫–ª—é—á–µ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã –µ–≥–æ —Å—Ç–∏–ª—è –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ—Å—Ç–∏. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —Å –±–æ–ª—å—à–∏–º –≤–Ω–∏–º–∞–Ω–∏–µ–º –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–∞–∂–¥–æ–º—É –ø—Ä–æ–µ–∫—Ç—É, –ø—Ä–µ–¥–ª–∞–≥–∞—è —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ—á–µ—Ç–∞—é—Ç –≤ —Å–µ–±–µ:
    
    - ‚úîÔ∏è *–ö–∞—á–µ—Å—Ç–≤–æ*  
    - üé® *–≠—Å—Ç–µ—Ç–∏—á–Ω–æ—Å—Ç—å*  
    - ‚è≥ *–î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å*  
    
    –í—Å–µ –Ω–∞—à–∏ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–æ–ª—å–∫–æ –ª—É—á—à–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, —á—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –≤–∞–º –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å –∏ –∫—Ä–∞—Å–æ—Ç—É –Ω–∞ –¥–æ–ª–≥–∏–µ –≥–æ–¥—ã.  
    
    –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –¥–æ–º–∞ —Å Facade Continent! üòä
    """
            photo_path = "fasad/templates/image/image_with_logo.jpg"
            await message.reply_photo(photo=FSInputFile(photo_path), caption=text)

        elif message.text == "–ù–∞—à–∏ —É—Å–ª—É–≥–∏ –ø–æ —Ñ–∞—Å–∞–¥—É üè†":
            facade_services_message = """
            üåü **–§–∞—Å–∞–¥–Ω—ã–µ –†–∞–±–æ—Ç—ã** üåü
                    
            üî® **–ù–∞—à–∏ —É—Å–ª—É–≥–∏:**
    - –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —à—Ç—É–∫–∞—Ç—É—Ä–∫–∞: –æ—Ç 1000 —Ä—É–±/–º¬≤
    - –ü–ª–∞–Ω–∫–µ–Ω: –æ—Ç 1500 —Ä—É–±/–º¬≤
    - –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π/–Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –∫–∞–º–µ–Ω—å: –æ—Ç 2500 —Ä—É–±/–º¬≤
    - –ö–ª–∏–Ω–∫–µ—Ä–Ω–∞—è –ø–ª–∏—Ç–∫–∞: –æ—Ç 2700 —Ä—É–±/–º
    - –î–µ–∫–æ—Ä-—ç–ª–µ–º–µ–Ω—Ç—ã: –æ—Ç 400 —Ä—É–±/–º.–ø.
    - –ú–æ–¥–µ–ª–∏—Ä—É—é—â–∞—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —à—Ç—É–∫–∞—Ç—É—Ä–∫–∞: –æ—Ç 1300 —Ä—É–±/–º¬≤
                    
            ‚ú® **–ü–æ—á–µ–º—É –ú—ã?**
    - –ö–∞—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å
    - –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤
    - –ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥
    - –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã
                    
            üîç **–ò —ç—Ç–æ –µ—â–µ –Ω–µ –≤—Å—ë!** –£ –Ω–∞—Å –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö —É—Å–ª—É–≥, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å –ª—é–±—ã–µ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è!
                    
            üìû **–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–æ–º!** üòä                """
            photo_path = "fasad/templates/image/slide_facade_price/planken.jpg"
            await message.reply_photo(
                photo=FSInputFile(photo_path), caption=facade_services_message
            )
        elif message.text == "–ù–∞—à–∏ —É—Å–ª—É–≥–∏ –ø–æ –∫—Ä–æ–≤–ª–µ üè†":
            roof_services_message = """
            üåü **–ö—Ä–æ–≤–µ–ª—å–Ω—ã–µ –†–∞–±–æ—Ç—ã** üåü
            
            üè† **–ù–∞—à–∏ —É—Å–ª—É–≥–∏:**
    - –ú–µ—Ç–∞–ª–ª–æ—á–µ—Ä–µ–ø–∏—Ü–∞: –æ—Ç 2000 —Ä—É–±/–º¬≤
    - –¶–µ–º–µ–Ω—Ç–Ω–æ-–ø–µ—Å—á–∞–Ω–∞—è —á–µ—Ä–µ–ø–∏—Ü–∞: –æ—Ç 2500 —Ä—É–±/–º¬≤
    - –ì–∏–±–∫–∞—è —á–µ—Ä–µ–ø–∏—Ü–∞: –æ—Ç 2000 —Ä—É–±/–º¬≤
    - –ú–æ–¥—É–ª—å–Ω–∞—è —á–µ—Ä–µ–ø–∏—Ü–∞: –æ—Ç 1900 —Ä—É–±/–º¬≤
    - –§–∞–ª—å—Ü–µ–≤–∞—è –∫—Ä–æ–≤–ª—è: –æ—Ç 2100 —Ä—É–±/–º¬≤
    - –ö–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è —á–µ—Ä–µ–ø–∏—Ü–∞: –æ—Ç 2000 —Ä—É–±/–º¬≤
            
            ‚ú® **–ü–æ—á–µ–º—É –ú—ã?**
    - –ö–∞—á–µ—Å—Ç–≤–æ –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å
    - –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤
    - –ü–æ–ª–Ω—ã–π —Å–ø–µ–∫—Ç—Ä —É—Å–ª—É–≥
    - –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç—ã
    
    üîç **–ò —ç—Ç–æ –µ—â–µ –Ω–µ –≤—Å—ë!** –£ –Ω–∞—Å –µ—Å—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö —É—Å–ª—É–≥, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç—å –ª—é–±—ã–µ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏. –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è!
    
    üìû **–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –∏ —Å–æ–∑–¥–∞–π—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–π –¥–æ–º!** üòä
                    """
            photo_path = "fasad/templates/image/slide_roof_price/cementno.jpg"
            await message.reply_photo(
                photo=FSInputFile(photo_path), caption=roof_services_message
            )
        elif message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ üì±":
            phone = (
                session.query(Information).filter(Information.name == "–ù–æ–º–µ—Ä –Ω–∞ —Å–∞–π—Ç–µ").first()
            )
            email = (
                session.query(Information).filter(Information.name == "–ü–æ—á—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ").first()
            )
            contact_message = f"""
            üåü **–°–≤—è–∂–∏—Ç–µ—Å—å —Å –ù–∞–º–∏!** üåü
    
            –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º! –ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è ‚Äì –º—ã —Ä–∞–¥—ã –ø–æ–º–æ—á—å!
    
            üìû **–¢–µ–ª–µ—Ñ–æ–Ω:**  
            {phone.data}
    
            üìß **Email:**  
            {email.data}
    
            –í–∞—à–∏ –∏–¥–µ–∏ –∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –¥–ª—è –Ω–∞—Å –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã. –î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º –≤–∞—à –ø—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω—ã–º! üòä
            """
            photo_path = "fasad/templates/image/image_main/background.jpg"
            await message.reply_photo(
                photo=FSInputFile(photo_path), caption=contact_message
            )

    except Exception as e:
        print(e)
        await message.answer(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤–µ—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –Ω–µ–ø–æ–ª–∞–¥–∫–∞, –Ω—É–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_keyboard(),
        )


@dp.message(lambda message: message.text == "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É üìë")
async def start_feedback(message: types.Message, state: FSMContext):
    await state.set_state(Form.name)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–º–µ–Ω–∏
    user_name = message.from_user.first_name or "–ì–æ—Å—Ç—å"
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:",
        reply_markup=get_feedback_keyboard(user_name),
    )


@dp.message(lambda message: message.text == "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è")
async def ask_phone(message: types.Message, state: FSMContext):
    await state.set_state(Form.phone)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    user_phone = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä"
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ:",
        reply_markup=get_phone_keyboard(user_phone),
    )


@dp.message(lambda message: message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É")
async def cancel_feedback(message: types.Message, state: FSMContext):
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await message.answer(
        "–ó–∞—è–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ!",
        reply_markup=get_main_keyboard(),
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏
@dp.message(StateFilter(Form.name))
async def process_name(message: types.Message, state: FSMContext):
    try:
        if message.text.startswith("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è:"):
            name = message.from_user.first_name
        else:
            name = message.text

        await state.update_data(name=name)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
        await state.set_state(Form.phone)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω :",
            reply_markup=get_phone_keyboard("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä"),
        )

    except Exception:
        await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await message.answer(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤–µ—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –Ω–µ–ø–æ–ª–∞–¥–∫–∞, –Ω—É–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_keyboard(),
        )


@dp.message(StateFilter(Form.phone))
async def process_phone(message: types.Message, state: FSMContext):
    try:
        if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω":
            phone = "–ù–µ —É–∫–∞–∑–∞–Ω"
        else:
            phone = message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω

        await state.update_data(phone=phone)
        await state.set_state(Form.comments)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", reply_markup=get_comment_keyboard()
        )

    except Exception:
        await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await message.answer(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤–µ—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –Ω–µ–ø–æ–ª–∞–¥–∫–∞, –Ω—É–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_keyboard(),
        )


@dp.message(StateFilter(Form.comments))
async def process_comments(message: types.Message, state: FSMContext):
    try:
        if message.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π":
            comments = "–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤"
        else:
            comments = message.text  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

        await state.update_data(comments=comments)

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        data = await state.get_data()
        name = data.get("name")
        phone = data.get("phone")
        comments = data.get("comments")
        user_id = message.from_user.id
        username = message.from_user.username or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        session = Session()

        new = Contact(
            name=name,
            number_phone=phone or "None",
            question=comments,
            comments=comments,
        )
        session.add(new)
        session.commit()

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message_text = (
            f"üîî –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –û–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å üîî\n"
            f"–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
            f"üë§ –ó–∞–ø—Ä–æ—Å –ø–æ—Å—Ç—É–ø–∏–ª —Å telegram: [@{username}](https://t.me/{username})\n"
            f"üë§ ID: {user_id}\n"
            f"üë§ NAME: {message.from_user.first_name}\n\n"
            f"–ó–∞–ø–æ–ª–µ–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n"
            f"üë© –ò–º—è: {name}\n"
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
            f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {comments}"
        )
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        async with httpx.AsyncClient() as client:
            response = await client.post(
                f"https://api.telegram.org/bot{API_TOKEN}/sendMessage",
                json={"chat_id": CHAT_ID, "text": message_text},
            )

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        if response.status_code == 200:
            await message.answer(
                "–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.", reply_markup=get_main_keyboard()
            )
        else:
            await message.answer(
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.",
                reply_markup=get_main_keyboard(),
            )

        await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ

    except Exception:
        await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await message.answer(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞–≤–µ—Ä–Ω–æ–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –Ω–µ–ø–æ–ª–∞–¥–∫–∞, –Ω—É–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.",
            reply_markup=get_main_keyboard(),
        )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    import asyncio

    asyncio.run(main())
